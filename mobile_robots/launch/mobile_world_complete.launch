<?xml version="1.0" encoding="UTF-8"?>

<launch>  

<!--<rosparam file="$(find c_legged)/config/gazebo.yaml" command="load"/>-->
    <param name="/use_sim_time" value="true"/>
    <param name="scale_linear" value="0.1"/>

    <arg name="world" default="$(find mobile_robots)/src/world/mobile3.world"/>
    <arg name="robot" default="machines"/>
    <arg name="debug" default="false"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="pause" default="false"/>  <!-- Start Gazebo with a blank world -->

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg pause)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

  <include file="$(find mobile_robots)/launch/mobile_robot_spawn.launch">
        <arg name="x" value="3.6" />
        <arg name="y" value="0.4" />
        <arg name="z" value="0.0" />
        <arg name="urdf_robot_file" value="$(find mobile_robots)/urdf/turtlebot3_burger.urdf.xacro" />
        <arg name="robot_name" value="turtlebot3_burger" />
    </include>

    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find mobile_robots)/config/main.rviz" />
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- Arguments -->
    <arg name="set_base_frame" default="base_footprint"/>
    <arg name="set_odom_frame" default="odom"/>
    <arg name="set_map_frame"  default="map"/>

    <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
        <param name="base_frame" value="$(arg set_base_frame)"/>
        <param name="odom_frame" value="$(arg set_odom_frame)"/>
        <param name="map_frame"  value="$(arg set_map_frame)"/>
        <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
    </node>

  <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <arg name="move_forward_only" default="false"/>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_burger.yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
  </node>
    

 </launch>   